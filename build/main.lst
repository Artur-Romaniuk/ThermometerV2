ARM GAS  /tmp/ccXI1FGD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	Error_Handler:
  27              	.LFB135:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.</center></h2>
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/main.c ****  * the "License"; You may not use this file except in compliance with the
  14:Core/Src/main.c ****  * License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****  *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/main.c ****  *
  17:Core/Src/main.c ****  ******************************************************************************
  18:Core/Src/main.c ****  */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "rtc.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "usart.h"
  25:Core/Src/main.c **** #include "gpio.h"
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/main.c **** #include "HD44780_LCD.h"
  30:Core/Src/main.c **** #include "DS18B20.h"
ARM GAS  /tmp/ccXI1FGD.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** /* USER CODE END PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  43:Core/Src/main.c **** /* USER CODE BEGIN PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE BEGIN PV */
  50:Core/Src/main.c **** extern int DS18B20_state;
  51:Core/Src/main.c **** /* USER CODE END PV */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  54:Core/Src/main.c **** void SystemClock_Config(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
ARM GAS  /tmp/ccXI1FGD.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_USART2_UART_Init();
  93:Core/Src/main.c ****   MX_RTC_Init();
  94:Core/Src/main.c ****   MX_TIM6_Init();
  95:Core/Src/main.c ****   MX_TIM7_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** 	Lcd_PortType ports[] = { LCD_D4_GPIO_Port, LCD_D5_GPIO_Port, LCD_D6_GPIO_Port, LCD_D7_GPIO_Port };
  99:Core/Src/main.c **** 
 100:Core/Src/main.c **** 	Lcd_PinType pins[] = { LCD_D4_Pin, LCD_D5_Pin, LCD_D6_Pin, LCD_D7_Pin };
 101:Core/Src/main.c **** 
 102:Core/Src/main.c **** 	Lcd_HandleTypeDef lcd = Lcd_create(ports, pins, LCD_RS_GPIO_Port, LCD_RS_Pin, LCD_E_GPIO_Port, LCD
 103:Core/Src/main.c **** 
 104:Core/Src/main.c **** 	Lcd_string(&lcd, "Temperature:");
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Infinite loop */
 109:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 110:Core/Src/main.c **** 	HAL_TIM_Base_Start(&htim6);
 111:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim7);
 112:Core/Src/main.c **** 	__HAL_TIM_CLEAR_FLAG(&htim7, TIM_FLAG_UPDATE);
 113:Core/Src/main.c **** 	while (1) {
 114:Core/Src/main.c **** 		float temperature=DS18B20_Read_Temperature();
 115:Core/Src/main.c **** 		if(temperature==0xffff)
 116:Core/Src/main.c **** 		{
 117:Core/Src/main.c **** 			Lcd_clear(&lcd);
 118:Core/Src/main.c **** 			Lcd_cursor(&lcd, 0, 0);
 119:Core/Src/main.c **** 			Lcd_string(&lcd, "TMP ERROR");
 120:Core/Src/main.c **** 		}else
 121:Core/Src/main.c **** 		{
 122:Core/Src/main.c **** 			Lcd_cursor(&lcd, 1, 0);
 123:Core/Src/main.c **** 			Lcd_float(&lcd, temperature);
 124:Core/Src/main.c **** 		}
 125:Core/Src/main.c **** 
 126:Core/Src/main.c **** 		HAL_Delay(2000);
 127:Core/Src/main.c ****     /* USER CODE END WHILE */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 130:Core/Src/main.c **** 	}
 131:Core/Src/main.c ****   /* USER CODE END 3 */
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****   * @brief System Clock Configuration
 136:Core/Src/main.c ****   * @retval None
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c **** void SystemClock_Config(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
ARM GAS  /tmp/ccXI1FGD.s 			page 4


 145:Core/Src/main.c ****   */
 146:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 147:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 148:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 149:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 152:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 153:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 161:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 168:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 170:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 172:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 173:Core/Src/main.c **** 
 174:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 179:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 180:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 181:Core/Src/main.c ****   {
 182:Core/Src/main.c ****     Error_Handler();
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** }
 185:Core/Src/main.c **** 
 186:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 187:Core/Src/main.c **** 
 188:Core/Src/main.c **** /* USER CODE END 4 */
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 192:Core/Src/main.c ****   * @retval None
 193:Core/Src/main.c ****   */
 194:Core/Src/main.c **** void Error_Handler(void)
 195:Core/Src/main.c **** {
  29              		.loc 1 195 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
ARM GAS  /tmp/ccXI1FGD.s 			page 5


 196:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 197:Core/Src/main.c **** 	/* User can add his own implementation to report the HAL error return state */
 198:Core/Src/main.c **** 	__disable_irq();
  35              		.loc 1 198 2 view .LVU1
  36              	.LBB4:
  37              	.LBI4:
  38              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
ARM GAS  /tmp/ccXI1FGD.s 			page 6


  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  /tmp/ccXI1FGD.s 			page 7


 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  39              		.loc 2 140 27 view .LVU2
  40              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  41              		.loc 2 142 3 view .LVU3
  42              		.syntax unified
  43              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  44 0000 72B6     		cpsid i
  45              	@ 0 "" 2
  46              		.thumb
  47              		.syntax unified
  48              	.L2:
  49              	.LBE5:
  50              	.LBE4:
 199:Core/Src/main.c **** 	while (1) {
  51              		.loc 1 199 2 discriminator 1 view .LVU4
 200:Core/Src/main.c **** 	}
  52              		.loc 1 200 2 discriminator 1 view .LVU5
 199:Core/Src/main.c **** 	while (1) {
  53              		.loc 1 199 8 discriminator 1 view .LVU6
  54 0002 FEE7     		b	.L2
  55              		.cfi_endproc
  56              	.LFE135:
  58              		.section	.text.SystemClock_Config,"ax",%progbits
ARM GAS  /tmp/ccXI1FGD.s 			page 8


  59              		.align	1
  60              		.global	SystemClock_Config
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  64              		.fpu fpv4-sp-d16
  66              	SystemClock_Config:
  67              	.LFB134:
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  68              		.loc 1 139 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 176
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72 0000 10B5     		push	{r4, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
  77 0002 ACB0     		sub	sp, sp, #176
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 184
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  80              		.loc 1 140 3 view .LVU8
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  81              		.loc 1 140 22 is_stmt 0 view .LVU9
  82 0004 3422     		movs	r2, #52
  83 0006 0021     		movs	r1, #0
  84 0008 1FA8     		add	r0, sp, #124
  85 000a FFF7FEFF 		bl	memset
  86              	.LVL0:
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  87              		.loc 1 141 3 is_stmt 1 view .LVU10
 141:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  88              		.loc 1 141 22 is_stmt 0 view .LVU11
  89 000e 0024     		movs	r4, #0
  90 0010 1A94     		str	r4, [sp, #104]
  91 0012 1B94     		str	r4, [sp, #108]
  92 0014 1C94     		str	r4, [sp, #112]
  93 0016 1D94     		str	r4, [sp, #116]
  94 0018 1E94     		str	r4, [sp, #120]
 142:Core/Src/main.c **** 
  95              		.loc 1 142 3 is_stmt 1 view .LVU12
 142:Core/Src/main.c **** 
  96              		.loc 1 142 28 is_stmt 0 view .LVU13
  97 001a 5C22     		movs	r2, #92
  98 001c 2146     		mov	r1, r4
  99 001e 03A8     		add	r0, sp, #12
 100 0020 FFF7FEFF 		bl	memset
 101              	.LVL1:
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 102              		.loc 1 146 3 is_stmt 1 view .LVU14
 103              	.LBB6:
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 104              		.loc 1 146 3 view .LVU15
 105 0024 0194     		str	r4, [sp, #4]
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 106              		.loc 1 146 3 view .LVU16
ARM GAS  /tmp/ccXI1FGD.s 			page 9


 107 0026 284B     		ldr	r3, .L11
 108 0028 1A6C     		ldr	r2, [r3, #64]
 109 002a 42F08052 		orr	r2, r2, #268435456
 110 002e 1A64     		str	r2, [r3, #64]
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 111              		.loc 1 146 3 view .LVU17
 112 0030 1B6C     		ldr	r3, [r3, #64]
 113 0032 03F08053 		and	r3, r3, #268435456
 114 0036 0193     		str	r3, [sp, #4]
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 115              		.loc 1 146 3 view .LVU18
 116 0038 019B     		ldr	r3, [sp, #4]
 117              	.LBE6:
 146:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 118              		.loc 1 146 3 view .LVU19
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 119              		.loc 1 147 3 view .LVU20
 120              	.LBB7:
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 121              		.loc 1 147 3 view .LVU21
 122 003a 0294     		str	r4, [sp, #8]
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123              		.loc 1 147 3 view .LVU22
 124 003c 234A     		ldr	r2, .L11+4
 125 003e 1368     		ldr	r3, [r2]
 126 0040 23F44043 		bic	r3, r3, #49152
 127 0044 43F48043 		orr	r3, r3, #16384
 128 0048 1360     		str	r3, [r2]
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 129              		.loc 1 147 3 view .LVU23
 130 004a 1368     		ldr	r3, [r2]
 131 004c 03F44043 		and	r3, r3, #49152
 132 0050 0293     		str	r3, [sp, #8]
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133              		.loc 1 147 3 view .LVU24
 134 0052 029B     		ldr	r3, [sp, #8]
 135              	.LBE7:
 147:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 136              		.loc 1 147 3 view .LVU25
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 137              		.loc 1 151 3 view .LVU26
 151:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 138              		.loc 1 151 36 is_stmt 0 view .LVU27
 139 0054 0523     		movs	r3, #5
 140 0056 1F93     		str	r3, [sp, #124]
 152:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 141              		.loc 1 152 3 is_stmt 1 view .LVU28
 152:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 142              		.loc 1 152 30 is_stmt 0 view .LVU29
 143 0058 4FF48033 		mov	r3, #65536
 144 005c 2093     		str	r3, [sp, #128]
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 145              		.loc 1 153 3 is_stmt 1 view .LVU30
 153:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 146              		.loc 1 153 30 is_stmt 0 view .LVU31
 147 005e 0123     		movs	r3, #1
 148 0060 2193     		str	r3, [sp, #132]
ARM GAS  /tmp/ccXI1FGD.s 			page 10


 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 149              		.loc 1 154 3 is_stmt 1 view .LVU32
 154:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 150              		.loc 1 154 34 is_stmt 0 view .LVU33
 151 0062 0223     		movs	r3, #2
 152 0064 2593     		str	r3, [sp, #148]
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 153              		.loc 1 155 3 is_stmt 1 view .LVU34
 155:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 4;
 154              		.loc 1 155 35 is_stmt 0 view .LVU35
 155 0066 4FF48002 		mov	r2, #4194304
 156 006a 2692     		str	r2, [sp, #152]
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 157              		.loc 1 156 3 is_stmt 1 view .LVU36
 156:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 100;
 158              		.loc 1 156 30 is_stmt 0 view .LVU37
 159 006c 0422     		movs	r2, #4
 160 006e 2792     		str	r2, [sp, #156]
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 161              		.loc 1 157 3 is_stmt 1 view .LVU38
 157:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 162              		.loc 1 157 30 is_stmt 0 view .LVU39
 163 0070 6422     		movs	r2, #100
 164 0072 2892     		str	r2, [sp, #160]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 165              		.loc 1 158 3 is_stmt 1 view .LVU40
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 166              		.loc 1 158 30 is_stmt 0 view .LVU41
 167 0074 2993     		str	r3, [sp, #164]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 168              		.loc 1 159 3 is_stmt 1 view .LVU42
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 169              		.loc 1 159 30 is_stmt 0 view .LVU43
 170 0076 2A93     		str	r3, [sp, #168]
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 171              		.loc 1 160 3 is_stmt 1 view .LVU44
 160:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172              		.loc 1 160 30 is_stmt 0 view .LVU45
 173 0078 2B93     		str	r3, [sp, #172]
 161:Core/Src/main.c ****   {
 174              		.loc 1 161 3 is_stmt 1 view .LVU46
 161:Core/Src/main.c ****   {
 175              		.loc 1 161 7 is_stmt 0 view .LVU47
 176 007a 1FA8     		add	r0, sp, #124
 177 007c FFF7FEFF 		bl	HAL_RCC_OscConfig
 178              	.LVL2:
 161:Core/Src/main.c ****   {
 179              		.loc 1 161 6 view .LVU48
 180 0080 D8B9     		cbnz	r0, .L8
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 181              		.loc 1 167 3 is_stmt 1 view .LVU49
 167:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 182              		.loc 1 167 31 is_stmt 0 view .LVU50
 183 0082 0F23     		movs	r3, #15
 184 0084 1A93     		str	r3, [sp, #104]
 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 185              		.loc 1 169 3 is_stmt 1 view .LVU51
ARM GAS  /tmp/ccXI1FGD.s 			page 11


 169:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 186              		.loc 1 169 34 is_stmt 0 view .LVU52
 187 0086 0223     		movs	r3, #2
 188 0088 1B93     		str	r3, [sp, #108]
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 189              		.loc 1 170 3 is_stmt 1 view .LVU53
 170:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 190              		.loc 1 170 35 is_stmt 0 view .LVU54
 191 008a 0023     		movs	r3, #0
 192 008c 1C93     		str	r3, [sp, #112]
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 193              		.loc 1 171 3 is_stmt 1 view .LVU55
 171:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 194              		.loc 1 171 36 is_stmt 0 view .LVU56
 195 008e 4FF4A053 		mov	r3, #5120
 196 0092 1D93     		str	r3, [sp, #116]
 172:Core/Src/main.c **** 
 197              		.loc 1 172 3 is_stmt 1 view .LVU57
 172:Core/Src/main.c **** 
 198              		.loc 1 172 36 is_stmt 0 view .LVU58
 199 0094 4FF48053 		mov	r3, #4096
 200 0098 1E93     		str	r3, [sp, #120]
 174:Core/Src/main.c ****   {
 201              		.loc 1 174 3 is_stmt 1 view .LVU59
 174:Core/Src/main.c ****   {
 202              		.loc 1 174 7 is_stmt 0 view .LVU60
 203 009a 0321     		movs	r1, #3
 204 009c 1AA8     		add	r0, sp, #104
 205 009e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 206              	.LVL3:
 174:Core/Src/main.c ****   {
 207              		.loc 1 174 6 view .LVU61
 208 00a2 60B9     		cbnz	r0, .L9
 178:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 209              		.loc 1 178 3 is_stmt 1 view .LVU62
 178:Core/Src/main.c ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
 210              		.loc 1 178 44 is_stmt 0 view .LVU63
 211 00a4 2023     		movs	r3, #32
 212 00a6 0393     		str	r3, [sp, #12]
 179:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 213              		.loc 1 179 3 is_stmt 1 view .LVU64
 179:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 214              		.loc 1 179 41 is_stmt 0 view .LVU65
 215 00a8 4FF48073 		mov	r3, #256
 216 00ac 1393     		str	r3, [sp, #76]
 180:Core/Src/main.c ****   {
 217              		.loc 1 180 3 is_stmt 1 view .LVU66
 180:Core/Src/main.c ****   {
 218              		.loc 1 180 7 is_stmt 0 view .LVU67
 219 00ae 03A8     		add	r0, sp, #12
 220 00b0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 221              	.LVL4:
 180:Core/Src/main.c ****   {
 222              		.loc 1 180 6 view .LVU68
 223 00b4 28B9     		cbnz	r0, .L10
 184:Core/Src/main.c **** 
 224              		.loc 1 184 1 view .LVU69
ARM GAS  /tmp/ccXI1FGD.s 			page 12


 225 00b6 2CB0     		add	sp, sp, #176
 226              	.LCFI2:
 227              		.cfi_remember_state
 228              		.cfi_def_cfa_offset 8
 229              		@ sp needed
 230 00b8 10BD     		pop	{r4, pc}
 231              	.L8:
 232              	.LCFI3:
 233              		.cfi_restore_state
 163:Core/Src/main.c ****   }
 234              		.loc 1 163 5 is_stmt 1 view .LVU70
 235 00ba FFF7FEFF 		bl	Error_Handler
 236              	.LVL5:
 237              	.L9:
 176:Core/Src/main.c ****   }
 238              		.loc 1 176 5 view .LVU71
 239 00be FFF7FEFF 		bl	Error_Handler
 240              	.LVL6:
 241              	.L10:
 182:Core/Src/main.c ****   }
 242              		.loc 1 182 5 view .LVU72
 243 00c2 FFF7FEFF 		bl	Error_Handler
 244              	.LVL7:
 245              	.L12:
 246 00c6 00BF     		.align	2
 247              	.L11:
 248 00c8 00380240 		.word	1073887232
 249 00cc 00700040 		.word	1073770496
 250              		.cfi_endproc
 251              	.LFE134:
 253              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 254              		.align	2
 255              	.LC2:
 256 0000 54656D70 		.ascii	"Temperature:\000"
 256      65726174 
 256      7572653A 
 256      00
 257 000d 000000   		.align	2
 258              	.LC3:
 259 0010 544D5020 		.ascii	"TMP ERROR\000"
 259      4552524F 
 259      5200
 260              		.section	.text.main,"ax",%progbits
 261              		.align	1
 262              		.global	main
 263              		.syntax unified
 264              		.thumb
 265              		.thumb_func
 266              		.fpu fpv4-sp-d16
 268              	main:
 269              	.LFB133:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 270              		.loc 1 69 1 view -0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 48
 273              		@ frame_needed = 0, uses_anonymous_args = 0
 274 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/ccXI1FGD.s 			page 13


 275              	.LCFI4:
 276              		.cfi_def_cfa_offset 8
 277              		.cfi_offset 4, -8
 278              		.cfi_offset 14, -4
 279 0002 2DED028B 		vpush.64	{d8}
 280              	.LCFI5:
 281              		.cfi_def_cfa_offset 16
 282              		.cfi_offset 80, -16
 283              		.cfi_offset 81, -12
 284 0006 90B0     		sub	sp, sp, #64
 285              	.LCFI6:
 286              		.cfi_def_cfa_offset 80
  77:Core/Src/main.c **** 
 287              		.loc 1 77 3 view .LVU74
 288 0008 FFF7FEFF 		bl	HAL_Init
 289              	.LVL8:
  84:Core/Src/main.c **** 
 290              		.loc 1 84 3 view .LVU75
 291 000c FFF7FEFF 		bl	SystemClock_Config
 292              	.LVL9:
  91:Core/Src/main.c ****   MX_USART2_UART_Init();
 293              		.loc 1 91 3 view .LVU76
 294 0010 FFF7FEFF 		bl	MX_GPIO_Init
 295              	.LVL10:
  92:Core/Src/main.c ****   MX_RTC_Init();
 296              		.loc 1 92 3 view .LVU77
 297 0014 FFF7FEFF 		bl	MX_USART2_UART_Init
 298              	.LVL11:
  93:Core/Src/main.c ****   MX_TIM6_Init();
 299              		.loc 1 93 3 view .LVU78
 300 0018 FFF7FEFF 		bl	MX_RTC_Init
 301              	.LVL12:
  94:Core/Src/main.c ****   MX_TIM7_Init();
 302              		.loc 1 94 3 view .LVU79
 303 001c FFF7FEFF 		bl	MX_TIM6_Init
 304              	.LVL13:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 305              		.loc 1 95 3 view .LVU80
 306 0020 FFF7FEFF 		bl	MX_TIM7_Init
 307              	.LVL14:
  98:Core/Src/main.c **** 
 308              		.loc 1 98 2 view .LVU81
  98:Core/Src/main.c **** 
 309              		.loc 1 98 15 is_stmt 0 view .LVU82
 310 0024 274C     		ldr	r4, .L19
 311 0026 0DF1300E 		add	lr, sp, #48
 312 002a 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 313 002e 8EE80F00 		stm	lr, {r0, r1, r2, r3}
 100:Core/Src/main.c **** 
 314              		.loc 1 100 2 is_stmt 1 view .LVU83
 100:Core/Src/main.c **** 
 315              		.loc 1 100 14 is_stmt 0 view .LVU84
 316 0032 0AAA     		add	r2, sp, #40
 317 0034 04F1100C 		add	ip, r4, #16
 318 0038 9CE80300 		ldm	ip, {r0, r1}
 319 003c 82E80300 		stm	r2, {r0, r1}
 102:Core/Src/main.c **** 
ARM GAS  /tmp/ccXI1FGD.s 			page 14


 320              		.loc 1 102 2 is_stmt 1 view .LVU85
 102:Core/Src/main.c **** 
 321              		.loc 1 102 26 is_stmt 0 view .LVU86
 322 0040 214B     		ldr	r3, .L19+4
 323 0042 0021     		movs	r1, #0
 324 0044 0391     		str	r1, [sp, #12]
 325 0046 0421     		movs	r1, #4
 326 0048 0291     		str	r1, [sp, #8]
 327 004a 0193     		str	r3, [sp, #4]
 328 004c 0121     		movs	r1, #1
 329 004e 0091     		str	r1, [sp]
 330 0050 7146     		mov	r1, lr
 331 0052 04A8     		add	r0, sp, #16
 332 0054 FFF7FEFF 		bl	Lcd_create
 333              	.LVL15:
 104:Core/Src/main.c **** 
 334              		.loc 1 104 2 is_stmt 1 view .LVU87
 335 0058 1C49     		ldr	r1, .L19+8
 336 005a 04A8     		add	r0, sp, #16
 337 005c FFF7FEFF 		bl	Lcd_string
 338              	.LVL16:
 110:Core/Src/main.c **** 	HAL_TIM_Base_Start_IT(&htim7);
 339              		.loc 1 110 2 view .LVU88
 340 0060 1B48     		ldr	r0, .L19+12
 341 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start
 342              	.LVL17:
 111:Core/Src/main.c **** 	__HAL_TIM_CLEAR_FLAG(&htim7, TIM_FLAG_UPDATE);
 343              		.loc 1 111 2 view .LVU89
 344 0066 1B4C     		ldr	r4, .L19+16
 345 0068 2046     		mov	r0, r4
 346 006a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 347              	.LVL18:
 112:Core/Src/main.c **** 	while (1) {
 348              		.loc 1 112 2 view .LVU90
 349 006e 2368     		ldr	r3, [r4]
 350 0070 6FF00102 		mvn	r2, #1
 351 0074 1A61     		str	r2, [r3, #16]
 352 0076 0FE0     		b	.L16
 353              	.LVL19:
 354              	.L18:
 355              	.LBB8:
 117:Core/Src/main.c **** 			Lcd_cursor(&lcd, 0, 0);
 356              		.loc 1 117 4 view .LVU91
 357 0078 04A8     		add	r0, sp, #16
 358 007a FFF7FEFF 		bl	Lcd_clear
 359              	.LVL20:
 118:Core/Src/main.c **** 			Lcd_string(&lcd, "TMP ERROR");
 360              		.loc 1 118 4 view .LVU92
 361 007e 0022     		movs	r2, #0
 362 0080 1146     		mov	r1, r2
 363 0082 04A8     		add	r0, sp, #16
 364 0084 FFF7FEFF 		bl	Lcd_cursor
 365              	.LVL21:
 119:Core/Src/main.c **** 		}else
 366              		.loc 1 119 4 view .LVU93
 367 0088 1349     		ldr	r1, .L19+20
 368 008a 04A8     		add	r0, sp, #16
ARM GAS  /tmp/ccXI1FGD.s 			page 15


 369 008c FFF7FEFF 		bl	Lcd_string
 370              	.LVL22:
 371              	.L15:
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 372              		.loc 1 126 3 view .LVU94
 373 0090 4FF4FA60 		mov	r0, #2000
 374 0094 FFF7FEFF 		bl	HAL_Delay
 375              	.LVL23:
 376              	.LBE8:
 113:Core/Src/main.c **** 		float temperature=DS18B20_Read_Temperature();
 377              		.loc 1 113 8 view .LVU95
 378              	.L16:
 113:Core/Src/main.c **** 		float temperature=DS18B20_Read_Temperature();
 379              		.loc 1 113 2 view .LVU96
 380              	.LBB9:
 114:Core/Src/main.c **** 		if(temperature==0xffff)
 381              		.loc 1 114 3 view .LVU97
 114:Core/Src/main.c **** 		if(temperature==0xffff)
 382              		.loc 1 114 21 is_stmt 0 view .LVU98
 383 0098 FFF7FEFF 		bl	DS18B20_Read_Temperature
 384              	.LVL24:
 385 009c B0EE408A 		vmov.f32	s16, s0
 386              	.LVL25:
 115:Core/Src/main.c **** 		{
 387              		.loc 1 115 3 is_stmt 1 view .LVU99
 115:Core/Src/main.c **** 		{
 388              		.loc 1 115 5 is_stmt 0 view .LVU100
 389 00a0 DFED0E7A 		vldr.32	s15, .L19+24
 390 00a4 B4EE670A 		vcmp.f32	s0, s15
 391 00a8 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 392 00ac E4D0     		beq	.L18
 122:Core/Src/main.c **** 			Lcd_float(&lcd, temperature);
 393              		.loc 1 122 4 is_stmt 1 view .LVU101
 394 00ae 0022     		movs	r2, #0
 395 00b0 0121     		movs	r1, #1
 396 00b2 04A8     		add	r0, sp, #16
 397 00b4 FFF7FEFF 		bl	Lcd_cursor
 398              	.LVL26:
 123:Core/Src/main.c **** 		}
 399              		.loc 1 123 4 view .LVU102
 400 00b8 B0EE480A 		vmov.f32	s0, s16
 401 00bc 04A8     		add	r0, sp, #16
 402 00be FFF7FEFF 		bl	Lcd_float
 403              	.LVL27:
 404 00c2 E5E7     		b	.L15
 405              	.L20:
 406              		.align	2
 407              	.L19:
 408 00c4 00000000 		.word	.LANCHOR0
 409 00c8 00040240 		.word	1073873920
 410 00cc 00000000 		.word	.LC2
 411 00d0 00000000 		.word	htim6
 412 00d4 00000000 		.word	htim7
 413 00d8 10000000 		.word	.LC3
 414 00dc 00FF7F47 		.word	1199570688
 415              	.LBE9:
 416              		.cfi_endproc
ARM GAS  /tmp/ccXI1FGD.s 			page 16


 417              	.LFE133:
 419              		.section	.rodata
 420              		.align	2
 421              		.set	.LANCHOR0,. + 0
 422              	.LC0:
 423 0000 00040240 		.word	1073873920
 424 0004 00040240 		.word	1073873920
 425 0008 00040240 		.word	1073873920
 426 000c 00040240 		.word	1073873920
 427              	.LC1:
 428 0010 1000     		.short	16
 429 0012 2000     		.short	32
 430 0014 4000     		.short	64
 431 0016 8000     		.short	128
 432              		.text
 433              	.Letext0:
 434              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 435              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 436              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 437              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 438              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 439              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 440              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 441              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 442              		.file 11 "Core/Inc/tim.h"
 443              		.file 12 "Core/Inc/HD44780_LCD.h"
 444              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 445              		.file 14 "Core/Inc/DS18B20.h"
 446              		.file 15 "Core/Inc/rtc.h"
 447              		.file 16 "Core/Inc/usart.h"
 448              		.file 17 "Core/Inc/gpio.h"
 449              		.file 18 "<built-in>"
ARM GAS  /tmp/ccXI1FGD.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccXI1FGD.s:18     .text.Error_Handler:0000000000000000 $t
     /tmp/ccXI1FGD.s:26     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccXI1FGD.s:59     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccXI1FGD.s:66     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccXI1FGD.s:248    .text.SystemClock_Config:00000000000000c8 $d
     /tmp/ccXI1FGD.s:254    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccXI1FGD.s:261    .text.main:0000000000000000 $t
     /tmp/ccXI1FGD.s:268    .text.main:0000000000000000 main
     /tmp/ccXI1FGD.s:408    .text.main:00000000000000c4 $d
     /tmp/ccXI1FGD.s:420    .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_USART2_UART_Init
MX_RTC_Init
MX_TIM6_Init
MX_TIM7_Init
Lcd_create
Lcd_string
HAL_TIM_Base_Start
HAL_TIM_Base_Start_IT
Lcd_clear
Lcd_cursor
HAL_Delay
DS18B20_Read_Temperature
Lcd_float
htim6
htim7
